{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "cdc_ip",
						"type": "DatasetReference"
					},
					"name": "empfile"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTableEmpDS",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSqlTableEmpDS",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTableEmpDS",
						"type": "DatasetReference"
					},
					"name": "sink2"
				}
			],
			"transformations": [
				{
					"name": "derivedColumnIsActive"
				},
				{
					"name": "select1"
				},
				{
					"name": "lookup1"
				},
				{
					"name": "ExistingRows"
				},
				{
					"name": "select2"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "alterRow1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Eid as integer,",
				"          EName as string,",
				"          SAL as integer,",
				"          country as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     limit: 100,",
				"     ignoreNoFilesFound: false) ~> empfile",
				"source(output(",
				"          SKEY as integer,",
				"          EID as integer,",
				"          ENAME as string,",
				"          SAL as integer,",
				"          COUNTRY as string,",
				"          is_active as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source1",
				"empfile derive(IsActive = 1) ~> derivedColumnIsActive",
				"source1 select(mapColumn(",
				"          sql_SKEY = SKEY,",
				"          sql_EID = EID,",
				"          sql_ENAME = ENAME,",
				"          sql_SAL = SAL,",
				"          sql_COUNTRY = COUNTRY,",
				"          sql_is_active = is_active",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"empfile, select1 lookup(Eid == sql_EID,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> lookup1",
				"lookup1 filter(!isNull(sql_EID)) ~> ExistingRows",
				"ExistingRows select(mapColumn(",
				"          sql_SKEY,",
				"          sql_EID,",
				"          sql_ENAME,",
				"          sql_SAL,",
				"          sql_COUNTRY,",
				"          sql_is_active",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"select2 derive(sql_is_active = 0) ~> derivedColumn1",
				"derivedColumn1 alterRow(updateIf(1==1)) ~> alterRow1",
				"derivedColumnIsActive sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          SKEY as integer,",
				"          EID as integer,",
				"          ENAME as string,",
				"          SAL as integer,",
				"          COUNTRY as string,",
				"          is_active as integer",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     saveOrder: 2,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          EID = Eid,",
				"          ENAME = EName,",
				"          SAL,",
				"          COUNTRY = country,",
				"          is_active = IsActive",
				"     )) ~> sink1",
				"alterRow1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          SKEY as integer,",
				"          EID as integer,",
				"          ENAME as string,",
				"          SAL as integer,",
				"          COUNTRY as string,",
				"          is_active as integer",
				"     ),",
				"     deletable:false,",
				"     insertable:false,",
				"     updateable:true,",
				"     upsertable:false,",
				"     keys:['SKEY'],",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     saveOrder: 1,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          SKEY = sql_SKEY,",
				"          EID = sql_EID,",
				"          ENAME = sql_ENAME,",
				"          SAL = sql_SAL,",
				"          COUNTRY = sql_COUNTRY,",
				"          is_active = sql_is_active",
				"     )) ~> sink2"
			]
		}
	}
}